#BlueJ class context
comment0.target=JamesFu
comment0.text=\r\n\ Write\ a\ description\ of\ class\ here.\r\n\ \r\n\ @author\ James\ Fu\r\n\ @version\ 8/29/18\r\n
comment1.params=f\ l\ r\ s
comment1.target=JamesFu(java.lang.String,\ java.lang.String,\ int,\ int)
comment1.text=\r\n\ Constructor\ for\ the\ JamesFu\ class.\r\n\ Constructors\ are\ special\ methods\ with\ the\ same\ exact\ name\ as\ the\ class\ name.\ \ \r\n\ Constructors\ to\ not\ have\ return\ types.\r\n\ Constructors\ can\ be\ overloaded.\ This\ means\ we\ can\ call\ a\ constructor\ with\ different\ sets\ of\ parameter\r\n\ \ lists\ to\ initalize\ for\ different\ conditions\ (depending\ on\ what\ constructors\ have\ been\ written.\r\n\ @param\ String\ f\ (firstname)\r\n\ @param\ String\ l\ (lastname)\r\n\ @param\ int\ r\ (row\ of\ seating\ arrangement)\r\n\ @param\ int\ s\ (seat\ number\ within\ row\ seating\ arrangement)\r\n\ \r\n
comment10.params=b
comment10.target=void\ setNumBrothers(int)
comment11.params=
comment11.target=void\ jacobSing()
comment12.params=s
comment12.target=void\ myHobby(java.lang.String)
comment2.params=
comment2.target=JamesFu()
comment2.text=\r\n\ Default\ constructor,\ if\ you\ don't\ pass\ in\ a\ name\ and\ seating\ location\r\n
comment3.params=
comment3.target=void\ act()
comment3.text=\r\n\ Act\ -\ do\ whatever\ the\ JamesFu\ actor\ wants\ to\ do.\ This\ method\ is\ called\ whenever\r\n\ the\ 'Act'\ or\ 'Run'\ button\ gets\ pressed\ in\ the\ environment.\r\n
comment4.params=
comment4.target=void\ getName()
comment4.text=\r\n\ Prints\ the\ first\ and\ last\ name\ to\ the\ console\r\n
comment5.params=
comment5.target=int\ getNumSiblings()
comment5.text=\r\n\ Additional\ setter\ and\ getter\ methods\r\n
comment6.params=s
comment6.target=void\ setNumSiblings(int)
comment7.params=
comment7.target=int\ getNumSisters()
comment8.params=s
comment8.target=void\ setNumSisters(int)
comment9.params=
comment9.target=int\ getNumBrothers()
numComments=13
